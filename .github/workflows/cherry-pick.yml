name: Cherry Pick PR
on:
  pull_request:
    types:
      - closed


jobs:
  cherry-pick:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Setup Node.js
        uses: actions/setup-node@v2
        with:
          node-version: '14.x'

      - name: Install dependencies
        run: npm install @actions/github

      - name: Check if PR is merged and labeled
        run: |
          if [ "${{ github.event.pull_request.merged }}" == "true" ]; then
            # Extract the version label
            LABEL=$(node -e "console.log(require('@actions/github').context.payload.pull_request.labels.find(label => /^cherry-pick-release-[0-9]+\\.[0-9]+$/.test(label.name)).name)")

            if [ "$LABEL" != "" ]; then
              echo "PR is merged and labeled with $LABEL"
              TARGET_BRANCH="release-$(echo $LABEL | cut -d'-' -f4-)"
              echo "Target release branch: $TARGET_BRANCH"

              # Log the LABEL value to the console
              echo "LABEL: $LABEL"

              # Debug: list all branches
              git fetch --all --prune
              
              # Check if the target release branch exists
              if git show-ref --quiet refs/heads/$TARGET_BRANCH; then
                echo "Target release branch exists: $TARGET_BRANCH"
                git checkout $TARGET_BRANCH
                git pull origin $TARGET_BRANCH
                git checkout -b cherry-pick-pr
                git cherry-pick "${{ github.event.pull_request.merge_commit_sha }}"
                # Handle any potential conflicts here if necessary
                git push origin cherry-pick-pr

                # Create a new pull request
                curl -X POST "https://api.github.com/repos/${{ github.repository }}/pulls" \
                  -H "Authorization: token ${{ secrets.GITHUB_TOKEN }}" \
                  -H "Accept: application/vnd.github.v3+json" \
                  -d '{
                    "title": "Cherry-pick to '$TARGET_BRANCH'",
                    "body": "This PR is a cherry-pick of the changes from #${{ github.event.pull_request.number }}",
                    "head": "cherry-pick-pr",
                    "base": "'$TARGET_BRANCH'"
                  }'
              else
                echo "Target release branch does not exist: $TARGET_BRANCH"
                git fetch --all --prune
                # Debug: list all branches again
                git branch -a
              fi
            else
              echo "PR is not labeled for cherry-pick"
            fi
          else
            echo "PR is not merged"
          fi
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
